"use strict";(self.webpackChunkiot_docs=self.webpackChunkiot_docs||[]).push([[210],{1727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=n(5893),a=n(1151);const r={title:"Concepts"},o=void 0,i={id:"concepts/index",title:"Concepts",description:"tree-overview",source:"@site/docs/concepts/index.mdx",sourceDirName:"concepts",slug:"/concepts/",permalink:"/docs/fa/concepts/",draft:!1,unlisted:!1,editUrl:"https://github.com/troweb/documentation/tree/main/docs/concepts/index.mdx",tags:[],version:"current",lastUpdatedBy:"Amirhossein Shakeri",lastUpdatedAt:1703315700,formattedLastUpdatedAt:"\u06f2\u06f3 \u062f\u0633\u0627\u0645\u0628\u0631 \u06f2\u06f0\u06f2\u06f3",frontMatter:{title:"Concepts"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/fa/getting-started"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Device",id:"device",level:2},{value:"Group",id:"group",level:2},{value:"Dashboard",id:"dashboard",level:2},{value:"Message",id:"message",level:2}];function h(e){const t={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"tree-overview",src:n(1262).Z+"",width:"2280",height:"1736"})}),"\n",(0,s.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(t.p,{children:"As a developer, understanding the system is crucial when it comes to\ndeveloping on the platform. Concepts are considered best steps to get\nto know the environment. We'll discuss few important concepts and deep\ndive into the core logic of the network."}),"\n","\n",(0,s.jsx)(t.h2,{id:"device",children:"Device"}),"\n",(0,s.jsxs)(t.p,{children:["Whether it's a microprocessor or not, clients that connect to the\nservice, are devices. Each device has a ",(0,s.jsx)(t.strong,{children:"State"})," stored in the system\nwhich can be updated in real-time through the network.\n",(0,s.jsx)(t.img,{alt:"device",src:n(8038).Z+"",width:"1032",height:"1032"})]}),"\n","\n",(0,s.jsx)(t.h2,{id:"group",children:"Group"}),"\n",(0,s.jsxs)(t.p,{children:["A set of devices is called a group like a building, a room, a factory,\na farm, a city, etc. Groups can hold multiple devices or sub-groups.\nLet's say a person has their home in an apartment. The apartment's a\ngroup including sub-groups and devices. Each room in a house is a\nsub-group of the house containing IoT devices in it. Actually groups\nare collections of devices that are somehow related to each other.\n",(0,s.jsx)(t.img,{alt:"group",src:n(2706).Z+"",width:"872",height:"872"})]}),"\n",(0,s.jsx)(t.h2,{id:"dashboard",children:"Dashboard"}),"\n",(0,s.jsx)(t.p,{children:"A dashboard is the area where user can manage their groups and control\ntheir devices. A dashboard is always created for each user by the\nsystem while the signup. It refers both to the UI and the abstract\nconcept itself."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"dashboard",src:n(4421).Z+"",width:"1512",height:"1512"})}),"\n",(0,s.jsx)(t.h2,{id:"message",children:"Message"}),"\n",(0,s.jsx)(t.p,{children:"Communication between the system and devices is possible through\nmessaging, which could be over Websockets, MQTT, etc. Messages are\ncommunication objects that are transfered over the network. At Thor,\nmessages follow a specific standard format:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-JSON",metastring:'title="JSON Message Format"',children:'{\n  "signal": "UPDATE_STATE",\n  "payload": {\n    "power": true,\n    "output": 32,\n    "LED": "#0fa",\n    "engine": {\n      "maxTemperature": 91\n    }\n  },\n  "id": "000000000000",\n  "message": "Optional human-readable message"\n}\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-h",metastring:'title="Binary Message Format(Advanced)"',children:"0xff 0x00 0xab 0xfa 0xbb 0xca 0xdd 0xfc\n0xec 0x6a 0x44 0x0c 0x3a 0x68 0x16 0xf2\n0x32 0xbf 0x0b 0x41 0x31 0x51 0xc4 0xe3\n0x38 0x5c 0x7c 0xf0 0x94 0x09 0x58 0x4c\n0xfc 0xd7 0x55 0xc5 0x6a 0xe3 0xc0 0x3f\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-JSON",metastring:'title="Compressed JSON Message Format"',children:'{\n  "p": {\n    "power": true,\n    "output": 32,\n    "LED": "#0fa",\n    "engine": {\n      "maxTemperature": 91\n    }\n  },\n  "id": "000000000000"\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8038:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/device-with-state-2c721f72983434ea4cadb4fd8219c0a1.png"},2706:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/group-d5b4bc76621fd3a3bb17257d3e0e00ca.png"},4421:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/groups-7e87ba71a1d33374fa367b81087eeb6d.png"},1262:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/tree-overview-9099fde9a1be02bd2e09e177d7214af5.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var s=n(7294);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);